@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 1,
    "backwardDepth": 1,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": true,
    "hideDataStructures": true,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": false, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 5,
    "showDetailedClassStructure": true
  },
  "rootClass": "Plugin.Application.ConsoleCommands.MainMenu.ShowReadingList",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1072845520 { 
   	label=Application
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Container160408811[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Container</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   path: File [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   readingArchive: ReadingArchive [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   readingList: ReadingList [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ GetReadingArchive(): ReadingArchive</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

subgraph cluster_622202847 { 
   	label=ConsoleCommands
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ConsoleCommand4600838[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(I)ConsoleCommand</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ description(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(): State</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#F1E5FD"
];

subgraph cluster_1516111365 { 
   	label=MainMenu
	labeljust=l
	fillcolor="#c4c4c4"
	style=filled
   
   ShowReadingList986665920[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ShowReadingList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   container: Container [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ description(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(): State</TD></TR>
<TR><TD ALIGN="LEFT" >+ name(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 
} 

subgraph cluster_2342 { 
   	label=IO
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Output190330273[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Output</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ parseGenreOptions(options: String[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseStateHelp(options: ConsoleCommand[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseStateOptions(options: ConsoleCommand[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >- printHeaderLine()</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveToTextFile(content: String, path: File)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showHeaderReadingArchive()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showHeaderReadingList()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showOutput(message: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
ConsoleCommand4600838 -> ShowReadingList986665920[arrowhead=none, arrowtail=empty, dir=both];
ShowReadingList986665920 -> Container160408811[label="container
[0..1]"];
    
}
@enduml